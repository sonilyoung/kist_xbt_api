<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.adm.statistics.dao.StatisticsDAO">
	
	<!-- 통계 - 학습실적조회 -->
	<select id="selectStatisticsLearningList" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformance" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformance">
		SELECT * FROM (
			SELECT 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME ,
				PROC_SEQ,	 
				floor(IFNULL(SUM(GAIN_SCORE)/COUNT(*), 0))AS AVERAGE_SCORE,
				STUDENT_CNT,
				PLAY_STUDENT_CNT
			FROM (
				SELECT		
					PROC_CD,
					PROC_YEAR ,
					(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME , 
					PROC_SEQ , 
					GAIN_SCORE,
					(SELECT COUNT(*) FROM XBT_BASELINE_STUDENT_INFO WHERE PROC_CD = T1.PROC_CD)AS STUDENT_CNT,
					(SELECT COUNT(DISTINCT(USER_ID)) FROM XBT_BASELINE_LEARNING WHERE PROC_CD = T1.PROC_CD)AS PLAY_STUDENT_CNT
				FROM XBT_BASELINE_LEARNING T1
			)TOT 
			GROUP BY 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME,
				PROC_SEQ
		)TOT WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_YEAR LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_NAME LIKE  CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>	
	</select>	
	
	<!-- 통계 - 사용자별 학습실적조회 -->
	<select id="selectStatisticsLearning" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail">
		SELECT 
			PROC_NAME,
			USER_ID,
			USER_NAME,
			RIGHT_CNT,
			WRONG_CNT,
			BAN_CNT,
			TOTAL_CNT,
			TRY_CNT,
			TRY_SEQ
		FROM (	
			SELECT		
				(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME ,
				USER_ID, 
				(SELECT USER_NM FROM XBT_STU_USER WHERE USER_ID = T1.USER_ID) as USER_NAME,
				SUM(RIGHT_CNT)AS RIGHT_CNT,
				SUM(WRONG_CNT-BAN_CNT)AS WRONG_CNT,
				SUM(BAN_CNT)AS BAN_CNT,
				SUM(RIGHT_CNT+WRONG_CNT) AS TOTAL_CNT,
				COUNT(TRY_SEQ) AS TRY_CNT,
				MAX(TRY_SEQ) AS TRY_SEQ
			FROM XBT_BASELINE_LEARNING T1
			WHERE PROC_CD = #{procCd} 
			GROUP BY 
				PROC_NAME,
				USER_ID		
		) TOT
	</select>		
	
	<!-- 통계 - 사용자별 학습실적조회 -->
	<select id="selectStatisticsLearningDetail" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail">
		SELECT		
			RIGHT_CNT,
			(WRONG_CNT-BAN_CNT)AS WRONG_CNT,
			BAN_CNT,
			RIGHT_CNT+WRONG_CNT AS TOTAL_CNT,
			TRY_SEQ,
			GAIN_SCORE
		FROM XBT_BASELINE_LEARNING T1
		WHERE
		PROC_CD = #{procCd} 
		AND USER_ID = #{userId}
		ORDER BY TRY_SEQ DESC
	</select>			
	
	
	<!-- 통계-학습컨텐츠그룹조회 -->
	<select id="selectStatisticsLearningGroupList" parameterType="egovframework.com.adm.statistics.vo.StatisticsGroup" resultType="egovframework.com.adm.statistics.vo.StatisticsGroup">
		SELECT 
			PROC_CD,
			PROC_YEAR,
			PROC_NAME , 
			PROC_SEQ,
			(SELECT GROUP_NAME FROM XBT_UNIT_GROUP WHERE UNIT_GROUP_CD = TOT.UNIT_GROUP_CD) AS GROUP_NAME,	
			RIGHT_CNT,
			(WRONG_CNT-BAN_CNT)AS WRONG_CNT,
			BAN_CNT,			
			(RIGHT_CNT+WRONG_CNT)AS TOTAL_CNT
		FROM (	
			SELECT
				T1.PROC_CD,
				T1.PROC_YEAR,
				T1.PROC_NAME , 
				T1.PROC_SEQ,
				T2.TRY_SEQ,
				T2.STUDY_LVL,
				(SELECT UNIT_GROUP_CD FROM XBT_BAG_INFO WHERE BAG_SCAN_ID = T2.BAG_SCAN_ID) AS UNIT_GROUP_CD,	
				SUM(CASE WHEN T2.ACTION_DIV = T2.USER_ACTION_DIV THEN 1 ELSE 0 END) AS RIGHT_CNT,
				SUM(CASE WHEN T2.ACTION_DIV != T2.USER_ACTION_DIV THEN 1 ELSE 0 END) AS WRONG_CNT,
				SUM(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) AS BAN_CNT
			FROM
				XBT_BASELINE T1 INNER JOIN XBT_STU_LEARNING_PROGRESSING T2
				ON T1.PROC_CD = T2.PROC_CD 
			GROUP BY PROC_CD, PROC_YEAR, PROC_NAME
		)TOT WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_YEAR LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_NAME LIKE  CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>			
	</select>	
	
	
	
	<!-- 통계 - 평가실적조회 -->
	<select id="selectStatisticsEvaluationList" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformance" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformance">
		SELECT * FROM (
			SELECT 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME ,
				PROC_SEQ,	 
				floor(IFNULL(SUM(GAIN_SCORE)/COUNT(*), 0))AS AVERAGE_SCORE,
				STUDENT_CNT,
				PLAY_STUDENT_CNT
			FROM (
				SELECT		
					PROC_CD,
					PROC_YEAR ,
					(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME , 
					PROC_SEQ , 
					GAIN_SCORE,
					(SELECT COUNT(*) FROM XBT_BASELINE_STUDENT_INFO WHERE PROC_CD = T1.PROC_CD)AS STUDENT_CNT,
					(SELECT COUNT(DISTINCT(USER_ID)) FROM XBT_BASELINE_EVALUATION WHERE PROC_CD = T1.PROC_CD)AS PLAY_STUDENT_CNT
				FROM XBT_BASELINE_EVALUATION T1
			)TOT 
			GROUP BY 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME,
				PROC_SEQ
		)TOT WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_YEAR LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_NAME LIKE  CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>			
	</select>	
	
	
	<!-- 통계 - 사용자별 평가실적조회 -->
	<select id="selectStatisticsEvaluation" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail">
		SELECT 
			PROC_NAME,
			USER_ID,
			USER_NAME,
			RIGHT_CNT,
			WRONG_CNT,
			BAN_CNT,
			TOTAL_CNT,
			GAIN_SCORE
		FROM (	
			SELECT		
				(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME ,
				USER_ID, 
				(SELECT USER_NM FROM XBT_STU_USER WHERE USER_ID = T1.USER_ID) as USER_NAME,
				RIGHT_CNT,
				(WRONG_CNT-BAN_CNT)AS WRONG_CNT,
				BAN_CNT,
				RIGHT_CNT+WRONG_CNT AS TOTAL_CNT,
				GAIN_SCORE
			FROM XBT_BASELINE_EVALUATION T1
			WHERE PROC_CD = #{procCd}
		) TOT
	</select>	
		
	
	<!-- 통계-평가컨텐츠그룹조회 -->
	<select id="selectStatisticsEvaluationGroupList" parameterType="egovframework.com.adm.statistics.vo.StatisticsGroup" resultType="egovframework.com.adm.statistics.vo.StatisticsGroup">
		SELECT 
			PROC_CD,
			PROC_YEAR,
			PROC_NAME , 
			PROC_SEQ,
			(SELECT GROUP_NAME FROM XBT_UNIT_GROUP WHERE UNIT_GROUP_CD = TOT.UNIT_GROUP_CD) AS GROUP_NAME,	
			RIGHT_CNT,
			(WRONG_CNT-BAN_CNT)AS WRONG_CNT,
			BAN_CNT,			
			(RIGHT_CNT+WRONG_CNT)AS TOTAL_CNT
		FROM (	
			SELECT
				T1.PROC_CD,
				T1.PROC_YEAR,
				T1.PROC_NAME , 
				T1.PROC_SEQ,
				T2.TRY_SEQ,
				T2.STUDY_LVL,
				(SELECT UNIT_GROUP_CD FROM XBT_BAG_INFO WHERE BAG_SCAN_ID = T2.BAG_SCAN_ID) AS UNIT_GROUP_CD,	
				SUM(CASE WHEN T2.ACTION_DIV = T2.USER_ACTION_DIV THEN 1 ELSE 0 END) AS RIGHT_CNT,
				SUM(CASE WHEN T2.ACTION_DIV != T2.USER_ACTION_DIV THEN 1 ELSE 0 END) AS WRONG_CNT,
				SUM(CASE WHEN ACTION_DIV = '1' and USER_ACTION_DIV = '0' THEN 1 END) AS BAN_CNT
			FROM
				XBT_BASELINE T1 INNER JOIN XBT_STU_EVALUATION_PROGRESSING T2
				ON T1.PROC_CD = T2.PROC_CD 
			GROUP BY PROC_CD, PROC_YEAR, PROC_NAME
		)TOT WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_YEAR LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_NAME LIKE  CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>			
		
	</select>	
	
	
			
	<!-- 통계-이론평가그룹조회 -->
	<select id="selectStatisticsTheoryList" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformance" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformance">
		SELECT * FROM(
			SELECT 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME ,
				PROC_SEQ,	 
				floor(IFNULL(SUM(GAIN_SCORE)/COUNT(*), 0))AS AVERAGE_SCORE,
				STUDENT_CNT,
				PLAY_STUDENT_CNT
			FROM (
				SELECT		
					PROC_CD,
					PROC_YEAR ,
					(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME , 
					PROC_SEQ , 
					GAIN_SCORE,
					(SELECT COUNT(*) FROM XBT_BASELINE_STUDENT_INFO WHERE PROC_CD = T1.PROC_CD)AS STUDENT_CNT,
					(SELECT COUNT(DISTINCT(USER_ID)) FROM XBT_BASELINE_THEORY WHERE PROC_CD = T1.PROC_CD)AS PLAY_STUDENT_CNT
				FROM XBT_BASELINE_THEORY T1
			)TOT 
			GROUP BY 
				PROC_CD ,
				PROC_YEAR,
				PROC_NAME,
				PROC_SEQ
		)TOT WHERE 1=1
		<choose>
			<when test='searchval != "" and searchval != null'>
				AND (
					PROC_YEAR LIKE CONCAT('%' , #{searchval} , '%')
					OR PROC_NAME LIKE  CONCAT('%' , #{searchval} , '%')
					OR PROC_SEQ LIKE  CONCAT('%' , #{searchval} , '%')
				)
			</when>
		</choose>			
	</select>		
	
	<!-- 통계 - 사용자별 이론평가실적조회 -->
	<select id="selectStatisticsTheory" parameterType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail" resultType="egovframework.com.adm.statistics.vo.StatisticsPerformanceDetail">
		SELECT 
			PROC_NAME,
			USER_ID,
			USER_NAME,
			RIGHT_CNT,
			WRONG_CNT,
			TOTAL_CNT,
			GAIN_SCORE
		FROM (	
			SELECT		
				(SELECT PROC_NAME FROM XBT_BASELINE WHERE PROC_CD = T1.PROC_CD) AS PROC_NAME ,
				USER_ID, 
				(SELECT USER_NM FROM XBT_STU_USER WHERE USER_ID = T1.USER_ID) as USER_NAME,
				RIGHT_CNT,
				WRONG_CNT,
				RIGHT_CNT+WRONG_CNT AS TOTAL_CNT,
				GAIN_SCORE
			FROM XBT_BASELINE_THEORY T1
			WHERE PROC_CD = #{procCd}
		) TOT
	</select>		
	
		
</mapper>